# syntax=docker/dockerfile:1
#
# K2HR3 REST API
#
# Copyright 2017 Yahoo Japan Corporation.
#
# K2HR3 is K2hdkc based Resource and Roles and policy Rules, gathers 
# common management information for the cloud.
# K2HR3 can dynamically manage information as "who", "what", "operate".
# These are stored as roles, resources, policies in K2hdkc, and the
# client system can dynamically read and modify these information.
#
# For the full copyright and license information, please view
# the license file that was distributed with this source code.
#
# AUTHOR:   Takeshi Nakatani
# CREATE:   Thu, Aug 26 2021
# REVISION:
#

# [NOTE]
# This file expects the following variables to replace.
#	GIT_DOMAIN_URL				(ex. "https://github.com" from GITHUB_SERVER_URL environment)
#	DOCKER_IMAGE_NAME			(ex. "k2hr3-api")
#	DOCKER_IMAGE_BASE			(ex. "antpickax/k2hdkc:latest")
#	DOCKER_IMAGE_DEV_BASE		(ex. "antpickax/k2hdkc-dev:latest")
#	DOCKER_GIT_ORGANIZATION		(ex. "antpickax")
#	DOCKER_GIT_REPOSITORY		(ex. "xxxxx")
#	DOCKER_GIT_BRANCH			(ex. "yyyyy")
#	PKG_UPDATE					(ex. "apk update -q --no-progress")
#	PKG_INSTALL_BUILDER			(ex. "apk add -q --no-progress --no-cache git build-base openssl libtool automake autoconf procps")
#	PKG_INSTALL_BIN				(ex. "apk add -q --no-progress --no-cache libstdc++")
#	PKG_REPO_SETUP_NODEJS		(ex. "curl -sL https://deb.nodesource.com/setup_14.x | bash")
#	PKG_INSTALL_NODEJS			(ex. "apk add -q --no-progress --no-cache nodejs npm")
#	BUILD_ENV					(ex, "ENV DEBIAN_FRONTEND=noninteractive")
#	UPDATE_LIBPATH				(ex. "ldconfig", if want no-operation, specify ":")
#

#
# Builder
#
FROM %%DOCKER_IMAGE_DEV_BASE%% AS %%DOCKER_IMAGE_NAME%%-builder

MAINTAINER antpickax
WORKDIR /

%%BUILD_ENV%%

RUN set -x && \
	%%PKG_UPDATE%% && \
	%%PKG_INSTALL_BUILDER%% && \
	%%PKG_REPO_SETUP_NODEJS%% && \
	%%PKG_INSTALL_NODEJS%% && \
	npm install -g npm && \
	git clone %%GIT_DOMAIN_URL%%/%%DOCKER_GIT_ORGANIZATION%%/%%DOCKER_GIT_REPOSITORY%%.git && \
	cd %%DOCKER_GIT_REPOSITORY%% && \
	git checkout %%DOCKER_GIT_BRANCH%% && \
	npm install --save-dev && \
	rm -rf .eslintrc.js .git .github .gitignore .npmignore .publishrc .auditignore templ/Dockerfile.templ test config/development.json config/dummyuser.json config/extdata-dummy.sh.templ && \
	cd / && \
	tar cvzf %%DOCKER_IMAGE_NAME%%.tgz %%DOCKER_GIT_REPOSITORY%%

#
# Image for main
#
FROM %%DOCKER_IMAGE_BASE%% AS %%DOCKER_IMAGE_NAME%%

MAINTAINER antpickax
WORKDIR /

RUN set -x && \
	%%PKG_UPDATE%% && \
	%%PKG_INSTALL_BIN%% && \
	%%PKG_REPO_SETUP_NODEJS%% && \
	%%PKG_INSTALL_NODEJS%% && \
	npm install -g npm

COPY --from=%%DOCKER_IMAGE_NAME%%-builder /%%DOCKER_IMAGE_NAME%%.tgz /%%DOCKER_IMAGE_NAME%%.tgz

RUN cd /usr/lib/node_modules && \
	tar xvzf /%%DOCKER_IMAGE_NAME%%.tgz && \
	rm /%%DOCKER_IMAGE_NAME%%.tgz && \
	%%UPDATE_LIBPATH%%

# [NOTE]
# Rplace command : /usr/lib/node_modules/k2hr3_api/bin/run.sh -fg --production
#
CMD ["/bin/sh"]
