{
  "name": "k2hr3-api",
  "version": "0.9.1",
  "dependencies": {
    "body-parser": "~1.18.3",
    "config": "^3.0.1",
    "cookie-parser": "~1.4.3",
    "dateformat": "^3.0.3",
    "debug": "~4.1.1",
    "express": "~4.16.4",
    "k2hdkc": "^0.9.5",
    "morgan": "~1.9.1",
    "rotating-file-stream": "^1.4.0"
  },
  "bin": {
    "k2hr3-api": "./bin/www",
    "k2hr3-watcher": "./bin/watcher"
  },
  "description": "K2HR3 REST API is K2hdkc based Resource and Roles and policy Rules",
  "main": "app.js",
  "directories": {
    "config": "config",
    "bin": "bin",
    "lib": "lib",
    "routes": "routes",
    "test": "test"
  },
  "devDependencies": {
    "chai": "^4.2.0",
    "chai-http": "^4.2.1",
    "eslint": "^5.12.1",
    "mocha": "^5.2.0",
    "nyc": "^14.1.1",
    "publish-please": "^5.4.3"
  },
  "scripts": {
    "help": "echo 'command list:\n    npm run start\n    npm run start:prod\n    npm run start:production\n    npm run start:dev\n    npm run start:develop\n    npm run start:dbg\n    npm run start:debug\n    npm run start:debug:break\n    npm run start:debug:nobreak\n    npm run start:watcher:prod\n    npm run start:watcher:production\n    npm run start:watcher:dev\n    npm run start:watcher:develop\n    npm run start:watcher:dbg\n    npm run start:watcher:debug\n    npm run start:watcher:debug:break\n    npm run start:watcher:debug:nobreak\n    npm run start:watcher:oneshot:prod\n    npm run start:watcher:oneshot:production\n    npm run start:watcher:oneshot:dev\n    npm run start:watcher:oneshot:develop\n    npm run start:watcher:oneshot:dbg\n    npm run start:watcher:oneshot:debug\n    npm run start:watcher:oneshot:debug:break\n    npm run start:watcher:oneshot:debug:nobreak\n    npm run stop\n    npm run stop:watcher\n    npm run test\n    npm run test:lint\n    npm run test:cover\n    npm run test:auto:all{:dbg}\n    npm run test:auto:version{:dbg}\n    npm run test:auto:usertokens{:dbg}\n    npm run test:auto:list{:dbg}\n    npm run test:auto:resource{:dbg}\n    npm run test:auto:policy{:dbg}\n    npm run test:auto:role{:dbg}\n    npm run test:auto:service{:dbg}\n    npm run test:auto:acr{:dbg}\n    npm run test:auto:userdata{:dbg}\n    npm run test:auto:watcher{:dbg}\n    npm run test:auto:templengine\n    npm run test:manual:apis:version_get\n    npm run test:manual:apis:usertoken_postput\n    npm run test:manual:apis:usertoken_gethead\n    npm run test:manual:apis:policy_postput\n    npm run test:manual:apis:policy_gethead\n    npm run test:manual:apis:policy_delete\n    npm run test:manual:apis:resource_postput\n    npm run test:manual:apis:resource_gethead\n    npm run test:manual:apis:resource_delete\n    npm run test:manual:apis:role_postput\n    npm run test:manual:apis:role_gethead\n    npm run test:manual:apis:role_delete\n    npm run test:manual:apis:service_postput\n    npm run test:manual:apis:service_gethead\n    npm run test:manual:apis:service_delete\n    npm run test:manual:apis:acr_postput\n    npm run test:manual:apis:acr_get\n    npm run test:manual:apis:acr_delete\n    npm run test:manual:apis:list_gethead\n    npm run test:manual:apis:userdata_get\n    npm run test:manual:apis:allusertenant_get\n    npm run test:manual:apis:k2hr3keys_get\n    npm run test:manual:load:k2hdkcdata:auto\n    npm run test:manual:load:k2hdkcdata:local\n    npm run test:manual:templengine\n'",
    "start": "npm run start:production",
    "start:prod": "npm run start:production",
    "start:production": "bin/run.sh -bg --production && echo '' && echo 'Start on production - Success' && echo ''",
    "start:dev": "npm run start:develop",
    "start:develop": "echo '' && echo 'Start on development without debugging' && echo '' && bin/run.sh -bg --development",
    "start:dbg": "npm run start:debug",
    "start:debug": "npm run start:debug:break",
    "start:debug:break": "echo '' && echo 'Start on development with debugging' && echo '' && bin/run.sh --development --debug --debuglevel dbg",
    "start:debug:nobreak": "echo '' && echo 'Start on development with debugging no break' && echo '' && bin/run.sh --development --debug-nobrk --debuglevel dbg",
    "start:watcher:prod": "npm run start:watcher:production",
    "start:watcher:production": "bin/run.sh -bg --production --watcher && echo '' && echo 'Start watcher on production - Success' && echo ''",
    "start:watcher:dev": "npm run start:watcher:develop",
    "start:watcher:develop": "echo '' && echo 'Start watcher on development without debugging' && echo '' && bin/run.sh -bg --development --watcher",
    "start:watcher:dbg": "npm run start:watcher:debug",
    "start:watcher:debug": "npm run start:watcher:debug:break",
    "start:watcher:debug:break": "echo '' && echo 'Start watcher on development with debugging' && echo '' && bin/run.sh --development --watcher --debug --debuglevel dbg",
    "start:watcher:debug:nobreak": "echo '' && echo 'Start watcher on development with debugging no break' && echo '' && bin/run.sh --development --watcher --debug-nobrk --debuglevel dbg",
    "start:watcher:oneshot:prod": "npm run start:watcher:oneshot:production",
    "start:watcher:oneshot:production": "bin/run.sh -bg --production --watcher --oneshot && echo '' && echo 'Start watcher on production - Success' && echo ''",
    "start:watcher:oneshot:dev": "npm run start:watcher:oneshot:develop",
    "start:watcher:oneshot:develop": "echo '' && echo 'Start watcher on development without debugging' && echo '' && bin/run.sh -bg --development --watcher --oneshot",
    "start:watcher:oneshot:dbg": "npm run start:watcher:oneshot:debug",
    "start:watcher:oneshot:debug": "npm run start:watcher:oneshot:debug:break",
    "start:watcher:oneshot:debug:break": "echo '' && echo 'Start watcher on development with debugging' && echo '' && bin/run.sh --development --watcher --oneshot --debug --debuglevel dbg",
    "start:watcher:oneshot:debug:nobreak": "echo '' && echo 'Start watcher on development with debugging no break' && echo '' && bin/run.sh --development --watcher --oneshot --debug-nobrk --debuglevel dbg",
    "stop": "bin/run.sh -stop && echo '' && echo 'Stop - Success' && echo ''",
    "stop:watcher": "bin/run.sh -stop --watcher && echo '' && echo 'Stop watcher - Success' && echo ''",
    "test": "npm run test:cover",
    "test:lint": "eslint lib/*.js app.js bin/www bin/watcher routes/*.js test/*.js",
    "test:cover": "echo 'Test with coverage' && nyc --reporter=lcov --reporter=text npm run test:auto:all",
    "test:auto": "echo 'Auto test : npm run test:auto:*\n      test:auto:all{:dbg}\n      test:auto:version{:dbg}\n      test:auto:usertokens{:dbg}\n      test:auto:list{:dbg}\n      test:auto:resource{:dbg}\n      test:auto:policy{:dbg}\n      test:auto:role{:dbg}\n      test:auto:service{:dbg}\n      test:auto:acr{:dbg}\n      test:auto:userdata{:dbg}\n      test:auto:watcher{:dbg}\n      test:auto:templengine\n'",
    "test:auto:all": "echo 'All test' && npm run test:lint && test/auto_test.sh all && npm run test:auto:templengine && echo 'Succeed test' && echo ''",
    "test:auto:all:dbg": "echo 'All test with debugging' && npm run test:lint && test/auto_test.sh -d dbg all && echo 'Succeed test' && echo ''",
    "test:auto:version": "echo 'Test Version' && test/auto_test.sh version && echo 'Succeed test' && echo ''",
    "test:auto:version:dbg": "echo 'Test Version with debugging' && test/auto_test.sh -d dbg version && echo 'Succeed test' && echo ''",
    "test:auto:usertokens": "echo 'Test UserTokens' && test/auto_test.sh usertokens && echo 'Succeed test' && echo ''",
    "test:auto:usertokens:dbg": "echo 'Test UserTokens with debugging' && test/auto_test.sh -d dbg usertokens && echo 'Succeed test' && echo ''",
    "test:auto:list": "echo 'Test List' && test/auto_test.sh list && echo 'Succeed test' && echo ''",
    "test:auto:list:dbg": "echo 'Test List with debugging' && test/auto_test.sh -d dbg list && echo 'Succeed test' && echo ''",
    "test:auto:resource": "echo 'Test Resource' && test/auto_test.sh resource && echo 'Succeed test' && echo ''",
    "test:auto:resource:dbg": "echo 'Test Resource with debugging' && test/auto_test.sh -d dbg resource && echo 'Succeed test' && echo ''",
    "test:auto:policy": "echo 'Test Policy' && test/auto_test.sh policy && echo 'Succeed test' && echo ''",
    "test:auto:policy:dbg": "echo 'Test Policy with debugging' && test/auto_test.sh -d dbg policy && echo 'Succeed test' && echo ''",
    "test:auto:role": "echo 'Test Role' && test/auto_test.sh role && echo 'Succeed test' && echo ''",
    "test:auto:role:dbg": "echo 'Test Role with debugging' && test/auto_test.sh -d dbg role && echo 'Succeed test' && echo ''",
    "test:auto:service": "echo 'Test Service' && test/auto_test.sh service && echo 'Succeed test' && echo ''",
    "test:auto:service:dbg": "echo 'Test Service with debugging' && test/auto_test.sh -d dbg service && echo 'Succeed test' && echo ''",
    "test:auto:acr": "echo 'Test ACR' && test/auto_test.sh acr && echo 'Succeed test' && echo ''",
    "test:auto:acr:dbg": "echo 'Test ACR with debugging' && test/auto_test.sh -d dbg acr && echo 'Succeed test' && echo ''",
    "test:auto:userdata": "echo 'Test Userdata' && test/auto_test.sh userdata && echo 'Succeed test' && echo ''",
    "test:auto:userdata:dbg": "echo 'Test Userdata with debugging' && test/auto_test.sh -d dbg userdata && echo 'Succeed test' && echo ''",
    "test:auto:watcher": "echo 'Test Watcher Process' && test/auto_test.sh watcher && echo 'Succeed test' && echo ''",
    "test:auto:watcher:dbg": "echo 'Test Watcher Process with debugging' && test/auto_test.sh -d dbg watcher && echo 'Succeed test' && echo ''",
    "test:auto:templengine": "echo 'Test template engine' && test/auto_template.sh && echo 'Succeed test' && echo ''",
    "test:manual": "echo 'Manual test : npm run test:manual:*\n      test:manual:apis:version_get\n      test:manual:apis:usertoken_postput\n      test:manual:apis:usertoken_gethead\n      test:manual:apis:policy_postput\n      test:manual:apis:policy_gethead\n      test:manual:apis:policy_delete\n      test:manual:apis:resource_postput\n      test:manual:apis:resource_gethead\n      test:manual:apis:resource_delete\n      test:manual:apis:role_postput\n      test:manual:apis:role_gethead\n      test:manual:apis:role_delete\n      test:manual:apis:service_postput\n      test:manual:apis:service_gethead\n      test:manual:apis:service_delete\n      test:manual:apis:acr_postput\n      test:manual:apis:acr_get\n      test:manual:apis:acr_delete\n      test:manual:apis:list_gethead\n      test:manual:apis:userdata_get\n      test:manual:apis:allusertenant_get\n      test:manual:apis:k2hr3keys_get\n      test:manual:load:k2hdkcdata:auto\n      test:manual:load:k2hdkcdata:local\n      test:manual:templengine\n'",
    "test:manual:apis:version_get": "test/manual_test.sh version_get",
    "test:manual:apis:usertoken_postput": "test/manual_test.sh usertoken_postput",
    "test:manual:apis:usertoken_gethead": "test/manual_test.sh usertoken_gethead",
    "test:manual:apis:policy_postput": "test/manual_test.sh policy_postput",
    "test:manual:apis:policy_gethead": "test/manual_test.sh policy_gethead",
    "test:manual:apis:policy_delete": "test/manual_test.sh policy_delete",
    "test:manual:apis:resource_postput": "test/manual_test.sh resource_postput",
    "test:manual:apis:resource_gethead": "test/manual_test.sh resource_gethead",
    "test:manual:apis:resource_delete": "test/manual_test.sh resource_delete",
    "test:manual:apis:role_postput": "test/manual_test.sh role_postput",
    "test:manual:apis:role_gethead": "test/manual_test.sh role_gethead",
    "test:manual:apis:role_delete": "test/manual_test.sh role_delete",
    "test:manual:apis:service_postput": "test/manual_test.sh service_postput",
    "test:manual:apis:service_gethead": "test/manual_test.sh service_gethead",
    "test:manual:apis:service_delete": "test/manual_test.sh service_delete",
    "test:manual:apis:acr_postput": "test/manual_test.sh acr_postput",
    "test:manual:apis:acr_get": "test/manual_test.sh acr_get",
    "test:manual:apis:acr_delete": "test/manual_test.sh acr_delete",
    "test:manual:apis:list_gethead": "test/manual_test.sh list_gethead",
    "test:manual:apis:userdata_get": "test/manual_test.sh userdata_get",
    "test:manual:apis:allusertenant_get": "test/manual_test.sh allusertenant_get",
    "test:manual:apis:k2hr3keys_get": "test/manual_test.sh k2hr3keys_get",
    "test:manual:load:k2hdkcdata:auto": "test/k2hdkc_test_load.sh  --for_auto_test && echo '' && echo 'Load test data for automatically testing - Success' && echo ''",
    "test:manual:load:k2hdkcdata:local": "test/k2hdkc_test_load.sh --main 33348 --sub 37146 && echo '' && echo 'Load test data for local testing - Success' && echo ''",
    "test:manual:templengine": "test/auto_template.sh && echo '' && echo 'Test template engine - Success' && echo ''",
    "publish-please": "publish-please",
    "prepublishOnly": "publish-please guard"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:yahoojapan/k2hr3_api.git"
  },
  "bugs": {
    "url": "https://github.com/yahoojapan/k2hr3_api/issues"
  },
  "homepage": "https://k2hr3.antpick.ax/",
  "keywords": [
    "K2HR3",
    "K2HASH",
    "K2HDKC",
    "CHMPX",
    "ROLE",
    "POLICY",
    "RULE",
    "RESOURCE",
    "express",
    "ejs",
    "webpack",
    "babel"
  ],
  "author": [
    "Takeshi Nakatani <ggtakec@gmail.com>"
  ],
  "contributors": [
    "Hirotaka Wakabayashi <hiwakaba@yahoo-corp.jp>"
  ],
  "license": "MIT"
}
